{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alius\\\\Downloads\\\\stripe-sample-code\\\\src\\\\checkout.js\";\nimport React from \"react\";\nimport { PaymentElement, LinkAuthenticationElement } from \"@stripe/react-stripe-js\";\nimport { useState } from \"react\";\nimport { useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport \"./styles.css\";\nexport default function CheckoutForm() {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [message, setMessage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n    setIsLoading(true);\n    const {\n      error\n    } = await stripe.confirmPayment({\n      elements,\n      confirmParams: {\n        // Make sure to change this to your payment completion page\n        return_url: `${window.location.origin}/completion`\n      }\n    });\n\n    // This point will only be reached if there is an immediate error when\n    // confirming the payment. Otherwise, your customer will be redirected to\n    // your `return_url`. For some payment methods like iDEAL, your customer will\n    // be redirected to an intermediate site first to authorize the payment, then\n    // redirected to the `return_url`.\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\n      setMessage(error.message);\n    } else {\n      setMessage(\"An unexpected error occured.\");\n    }\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/React.createElement(\"form\", {\n    id: \"payment-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LinkAuthenticationElement, {\n    id: \"link-authentication-element\"\n    // Access the email value like so:\n    // onChange={(event) => {\n    //  setEmail(event.value.email);\n    // }}\n    //\n    // Prefill the email field like so:\n    // options={{defaultValues: {email: 'foo@bar.com'}}}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PaymentElement, {\n    id: \"payment-element\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: isLoading || !stripe || !elements,\n    id: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    id: \"button-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spinner\",\n    id: \"spinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 24\n    }\n  }) : \"Pay now\")), !!message && /*#__PURE__*/React.createElement(\"div\", {\n    id: \"payment-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }));\n}","map":{"version":3,"names":["React","PaymentElement","LinkAuthenticationElement","useState","useStripe","useElements","CheckoutForm","stripe","elements","message","setMessage","isLoading","setIsLoading","handleSubmit","e","preventDefault","error","confirmPayment","confirmParams","return_url","window","location","origin","type","createElement","id","onSubmit","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","disabled","className"],"sources":["C:/Users/alius/Downloads/stripe-sample-code/src/checkout.js"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  PaymentElement,\r\n  LinkAuthenticationElement,\r\n} from \"@stripe/react-stripe-js\";\r\nimport { useState } from \"react\";\r\nimport { useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport \"./styles.css\";\r\n\r\nexport default function CheckoutForm() {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const [message, setMessage] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not yet loaded.\r\n      // Make sure to disable form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    const { error } = await stripe.confirmPayment({\r\n      elements,\r\n      confirmParams: {\r\n        // Make sure to change this to your payment completion page\r\n        return_url: `${window.location.origin}/completion`,\r\n      },\r\n    });\r\n\r\n    // This point will only be reached if there is an immediate error when\r\n    // confirming the payment. Otherwise, your customer will be redirected to\r\n    // your `return_url`. For some payment methods like iDEAL, your customer will\r\n    // be redirected to an intermediate site first to authorize the payment, then\r\n    // redirected to the `return_url`.\r\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\r\n      setMessage(error.message);\r\n    } else {\r\n      setMessage(\"An unexpected error occured.\");\r\n    }\r\n\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <form id='payment-form' onSubmit={handleSubmit}>\r\n      <LinkAuthenticationElement\r\n        id='link-authentication-element'\r\n        // Access the email value like so:\r\n        // onChange={(event) => {\r\n        //  setEmail(event.value.email);\r\n        // }}\r\n        //\r\n        // Prefill the email field like so:\r\n        // options={{defaultValues: {email: 'foo@bar.com'}}}\r\n      />\r\n      <PaymentElement id='payment-element' />\r\n      <button disabled={isLoading || !stripe || !elements} id='submit'>\r\n        <span id='button-text'>\r\n          {isLoading ? <div className='spinner' id='spinner'></div> : \"Pay now\"}\r\n        </span>\r\n      </button>\r\n      {/* Show any error or success messages */}\r\n      {!!message && <div id='payment-message'></div>}\r\n    </form>\r\n  );\r\n}\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}