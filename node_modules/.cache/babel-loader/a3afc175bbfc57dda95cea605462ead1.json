{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alius\\\\Downloads\\\\stripe-sample-code\\\\src\\\\checkout.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { PaymentElement, LinkAuthenticationElement } from \"@stripe/react-stripe-js\";\nimport { useStripe, useElements } from \"@stripe/react-stripe-js\";\nexport default function CheckoutForm() {\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [snackbar, setSnackbar] = useState(true);\n  const [paymentRequestButton, setPaymentRequestButton] = useState(null);\n  const stripe = useStripe();\n  const elements = useElements();\n  useEffect(() => {\n    if (!stripe || !elements) {\n      return;\n    }\n    const paymentRequest = stripe.paymentRequest({\n      country: \"US\",\n      // Your country\n      currency: \"usd\",\n      // Your currency\n      paymentMethodTypes: [\"card\"],\n      // Google Pay and Apple Pay both use \"card\"\n      requestPayerName: true,\n      requestPayerEmail: true,\n      total: {\n        label: \"Total\",\n        // A label for the payment request\n        amount: 5000 // The total amount to charge in cents (e.g., $50.00 is 5000 cents)\n      }\n    });\n    paymentRequest.canMakePayment().then(result => {\n      if (result) {\n        // Check if Apple Pay or Google Pay is supported\n        if (result.googlePay) {\n          const elements = stripe.elements();\n          const prButton = elements.create(\"paymentRequestButton\", {\n            paymentRequest: paymentRequest\n          });\n          prButton.mount(\"#payment-request-button\");\n          setPaymentRequestButton(prButton);\n        }\n      } else {\n        console.log(\"Payment methods (Apple Pay, Google Pay) not supported.\");\n      }\n    }).catch(error => {\n      console.error(\"Error checking canMakePayment:\", error);\n    });\n  }, [stripe, elements]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      return;\n    }\n    setIsLoading(true);\n    const Domain = \"http://localhost:3000/\";\n    const {\n      error\n    } = await stripe.confirmPayment({\n      elements,\n      confirmParams: {\n        return_url: `${Domain}success`\n      }\n    });\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\n      setMessage(error.message);\n      setTimeout(() => {\n        setSnackbar(false);\n      }, 3000);\n    } else {\n      setMessage(\"An unexpected error occurred.\");\n      setTimeout(() => {\n        setSnackbar(false);\n      }, 3000);\n    }\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/React.createElement(\"form\", {\n    id: \"payment-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LinkAuthenticationElement, {\n    id: \"link-authentication-element\",\n    onChange: event => setEmail(event.value.email),\n    options: {\n      defaultValues: {\n        email: \"aliusama.vectorcoder@gmail.com\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PaymentElement, {\n    id: \"payment-element\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"payment-request-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"button\", {\n    disabled: isLoading || !stripe || !elements,\n    id: \"submit\",\n    style: {\n      display: paymentRequestButton ? \"none\" : \"block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    id: \"button-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spinner\",\n    id: \"spinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 24\n    }\n  }) : \"Pay now\")), message && snackbar && /*#__PURE__*/React.createElement(\"div\", {\n    id: \"payment-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 31\n    }\n  }, message));\n}","map":{"version":3,"names":["React","useState","useEffect","PaymentElement","LinkAuthenticationElement","useStripe","useElements","CheckoutForm","email","setEmail","message","setMessage","isLoading","setIsLoading","snackbar","setSnackbar","paymentRequestButton","setPaymentRequestButton","stripe","elements","paymentRequest","country","currency","paymentMethodTypes","requestPayerName","requestPayerEmail","total","label","amount","canMakePayment","then","result","googlePay","prButton","create","mount","console","log","catch","error","handleSubmit","e","preventDefault","Domain","confirmPayment","confirmParams","return_url","type","setTimeout","createElement","id","onSubmit","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onChange","event","value","options","defaultValues","disabled","style","display","className"],"sources":["C:/Users/alius/Downloads/stripe-sample-code/src/checkout.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  PaymentElement,\r\n  LinkAuthenticationElement,\r\n} from \"@stripe/react-stripe-js\";\r\nimport { useStripe, useElements } from \"@stripe/react-stripe-js\";\r\n\r\nexport default function CheckoutForm() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [snackbar, setSnackbar] = useState(true);\r\n  const [paymentRequestButton, setPaymentRequestButton] = useState(null);\r\n\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  useEffect(() => {\r\n    if (!stripe || !elements) {\r\n      return;\r\n    }\r\n\r\n    const paymentRequest = stripe.paymentRequest({\r\n      country: \"US\", // Your country\r\n      currency: \"usd\", // Your currency\r\n      paymentMethodTypes: [\"card\"], // Google Pay and Apple Pay both use \"card\"\r\n      requestPayerName: true,\r\n      requestPayerEmail: true,\r\n      total: {\r\n        label: \"Total\", // A label for the payment request\r\n        amount: 5000, // The total amount to charge in cents (e.g., $50.00 is 5000 cents)\r\n      },\r\n    });\r\n\r\n    paymentRequest\r\n      .canMakePayment()\r\n      .then((result) => {\r\n        if (result) {\r\n          // Check if Apple Pay or Google Pay is supported\r\n          if (result.googlePay) {\r\n            const elements = stripe.elements();\r\n            const prButton = elements.create(\"paymentRequestButton\", {\r\n              paymentRequest: paymentRequest,\r\n            });\r\n\r\n            prButton.mount(\"#payment-request-button\");\r\n            setPaymentRequestButton(prButton);\r\n          }\r\n        } else {\r\n          console.log(\"Payment methods (Apple Pay, Google Pay) not supported.\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error checking canMakePayment:\", error);\r\n      });\r\n  }, [stripe, elements]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not yet loaded.\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    const Domain = \"http://localhost:3000/\";\r\n    const { error } = await stripe.confirmPayment({\r\n      elements,\r\n      confirmParams: {\r\n        return_url: `${Domain}success`,\r\n      },\r\n    });\r\n\r\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\r\n      setMessage(error.message);\r\n      setTimeout(() => {\r\n        setSnackbar(false);\r\n      }, 3000);\r\n    } else {\r\n      setMessage(\"An unexpected error occurred.\");\r\n      setTimeout(() => {\r\n        setSnackbar(false);\r\n      }, 3000);\r\n    }\r\n\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <form id='payment-form' onSubmit={handleSubmit}>\r\n      <LinkAuthenticationElement\r\n        id='link-authentication-element'\r\n        onChange={(event) => setEmail(event.value.email)}\r\n        options={{\r\n          defaultValues: { email: \"aliusama.vectorcoder@gmail.com\" },\r\n        }}\r\n      />\r\n      <PaymentElement id='payment-element' />\r\n      <div id='payment-request-button'></div> {/* Payment Request Button */}\r\n      <button\r\n        disabled={isLoading || !stripe || !elements}\r\n        id='submit'\r\n        style={{ display: paymentRequestButton ? \"none\" : \"block\" }}\r\n      >\r\n        <span id='button-text'>\r\n          {isLoading ? <div className='spinner' id='spinner'></div> : \"Pay now\"}\r\n        </span>\r\n      </button>\r\n      {/* Show any error or success messages */}\r\n      {message && snackbar && <div id='payment-message'>{message}</div>}\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}