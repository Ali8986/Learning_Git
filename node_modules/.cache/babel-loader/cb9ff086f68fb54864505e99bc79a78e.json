{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alius\\\\Downloads\\\\stripe-sample-code\\\\src\\\\checkout.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { PaymentElement, LinkAuthenticationElement } from \"@stripe/react-stripe-js\";\nimport { useStripe, useElements } from \"@stripe/react-stripe-js\";\nexport default function CheckoutForm() {\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [snackbar, setSnackbar] = useState(true);\n  const [paymentRequestButton, setPaymentRequestButton] = useState(null);\n  const stripe = useStripe();\n  const elements = useElements();\n  useEffect(() => {\n    if (!stripe || !elements) {\n      return;\n    }\n    const paymentRequest = stripe.paymentRequest({\n      country: \"US\",\n      // Your country\n      currency: \"usd\",\n      // Your currency\n      paymentMethodTypes: [\"card\"],\n      // Google Pay and Apple Pay both use \"card\"\n      requestPayerName: true,\n      requestPayerEmail: true\n    });\n\n    // Check if the Payment Request button is available for Google Pay or Apple Pay\n    paymentRequest.canMakePayment().then(result => {\n      if (result.applePay || result.googlePay) {\n        const elements = stripe.elements();\n        const prButton = elements.create(\"paymentRequestButton\", {\n          paymentRequest: paymentRequest\n        });\n        prButton.mount(\"#payment-request-button\");\n        setPaymentRequestButton(prButton);\n      }\n    });\n  }, [stripe, elements]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      return;\n    }\n    setIsLoading(true);\n    const Domain = \"http://localhost:3000/\";\n    const {\n      error\n    } = await stripe.confirmPayment({\n      elements,\n      confirmParams: {\n        return_url: `${Domain}success`\n      }\n    });\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\n      setMessage(error.message);\n      setTimeout(() => {\n        setSnackbar(false);\n      }, 3000);\n    } else {\n      setMessage(\"An unexpected error occurred.\");\n      setTimeout(() => {\n        setSnackbar(false);\n      }, 3000);\n    }\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/React.createElement(\"form\", {\n    id: \"payment-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LinkAuthenticationElement, {\n    id: \"link-authentication-element\",\n    onChange: event => setEmail(event.value.email),\n    options: {\n      defaultValues: {\n        email: \"aliusama.vectorcoder@gmail.com\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PaymentElement, {\n    id: \"payment-element\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"payment-request-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"button\", {\n    disabled: isLoading || !stripe || !elements,\n    id: \"submit\",\n    style: {\n      display: paymentRequestButton ? \"none\" : \"block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    id: \"button-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spinner\",\n    id: \"spinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 24\n    }\n  }) : \"Pay now\")), message && snackbar && /*#__PURE__*/React.createElement(\"div\", {\n    id: \"payment-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 31\n    }\n  }, message));\n}","map":{"version":3,"names":["React","useState","useEffect","PaymentElement","LinkAuthenticationElement","useStripe","useElements","CheckoutForm","email","setEmail","message","setMessage","isLoading","setIsLoading","snackbar","setSnackbar","paymentRequestButton","setPaymentRequestButton","stripe","elements","paymentRequest","country","currency","paymentMethodTypes","requestPayerName","requestPayerEmail","canMakePayment","then","result","applePay","googlePay","prButton","create","mount","handleSubmit","e","preventDefault","Domain","error","confirmPayment","confirmParams","return_url","type","setTimeout","createElement","id","onSubmit","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onChange","event","value","options","defaultValues","disabled","style","display","className"],"sources":["C:/Users/alius/Downloads/stripe-sample-code/src/checkout.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  PaymentElement,\r\n  LinkAuthenticationElement,\r\n} from \"@stripe/react-stripe-js\";\r\nimport { useStripe, useElements } from \"@stripe/react-stripe-js\";\r\n\r\nexport default function CheckoutForm() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [snackbar, setSnackbar] = useState(true);\r\n  const [paymentRequestButton, setPaymentRequestButton] = useState(null);\r\n  \r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  useEffect(() => {\r\n    if (!stripe || !elements) {\r\n      return;\r\n    }\r\n\r\n    const paymentRequest = stripe.paymentRequest({\r\n      country: \"US\", // Your country\r\n      currency: \"usd\", // Your currency\r\n      paymentMethodTypes: [\"card\"], // Google Pay and Apple Pay both use \"card\"\r\n      requestPayerName: true,\r\n      requestPayerEmail: true,\r\n    });\r\n\r\n    // Check if the Payment Request button is available for Google Pay or Apple Pay\r\n    paymentRequest.canMakePayment().then((result) => {\r\n      if (result.applePay || result.googlePay) {\r\n        const elements = stripe.elements();\r\n        const prButton = elements.create(\"paymentRequestButton\", {\r\n          paymentRequest: paymentRequest,\r\n        });\r\n\r\n        prButton.mount(\"#payment-request-button\");\r\n        setPaymentRequestButton(prButton);\r\n      }\r\n    });\r\n  }, [stripe, elements]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not yet loaded.\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    const Domain = \"http://localhost:3000/\";\r\n    const { error } = await stripe.confirmPayment({\r\n      elements,\r\n      confirmParams: {\r\n        return_url: `${Domain}success`,\r\n      },\r\n    });\r\n\r\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\r\n      setMessage(error.message);\r\n      setTimeout(() => {\r\n        setSnackbar(false);\r\n      }, 3000);\r\n    } else {\r\n      setMessage(\"An unexpected error occurred.\");\r\n      setTimeout(() => {\r\n        setSnackbar(false);\r\n      }, 3000);\r\n    }\r\n\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <form id=\"payment-form\" onSubmit={handleSubmit}>\r\n      <LinkAuthenticationElement\r\n        id=\"link-authentication-element\"\r\n        onChange={(event) => setEmail(event.value.email)}\r\n        options={{\r\n          defaultValues: { email: \"aliusama.vectorcoder@gmail.com\" },\r\n        }}\r\n      />\r\n      <PaymentElement id=\"payment-element\" />\r\n      <div id=\"payment-request-button\"></div> {/* Payment Request Button */}\r\n      <button\r\n        disabled={isLoading || !stripe || !elements}\r\n        id=\"submit\"\r\n        style={{ display: paymentRequestButton ? \"none\" : \"block\" }}\r\n      >\r\n        <span id=\"button-text\">\r\n          {isLoading ? <div className=\"spinner\" id=\"spinner\"></div> : \"Pay now\"}\r\n        </span>\r\n      </button>\r\n      {/* Show any error or success messages */}\r\n      {message && snackbar && <div id=\"payment-message\">{message}</div>}\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}